<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	
	<bean id="securityManager" class="com.paldaps.system.core.security.impl.SecurityManagerImpl">
	</bean>

    <!-- This will ensure that hibernate or jpa exceptions are automatically translated into
         Spring's generic DataAccessException hierarchy -->
    <bean class="org.springframework.orm.hibernate4.HibernateExceptionTranslator"/>

    <bean id="dataSource"
        class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost:3306/xcubefin?autoReconnect=true" />
        <property name="username" value="xcubefin" />
        <property name="password" value="xcubefin" />
    </bean>
  
  
   <!-- Hibernate SessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
    	 <property name="dataSource">
        	<ref local="dataSource"/>
        </property>
       
        <property name="annotatedClasses">
            <list>             
                <value>com.paldaps.bo.entity.user.User</value>
                <value>com.paldaps.bo.entity.emp.Employee</value>
                <value>com.paldaps.bo.entity.emp.TempEmployee</value>
                <value>com.paldaps.bo.entity.emp.AdvGPFEntry</value>
                <value>com.paldaps.bo.entity.emp.RecGPFEntry</value>
                <value>com.paldaps.bo.entity.emp.SubsGPFEntry</value>
                <value>com.paldaps.bo.entity.emp.WiDrGPFEntry</value>
                <value>com.paldaps.bo.entity.emp.EmployeeOpnAndClsLog</value>
            </list>
        </property>

        <property name="hibernateProperties">
            <value>
                hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
                hibernate.jdbc.batch_size=5
                hibernate.show_sql=true
                hibernate.hbm2ddl.auto=update
            </value>
        </property>
    </bean>
    
    <!-- Read in DAOs from the hibernate package -->
    <context:component-scan base-package="com.paldaps.bo.dao.hibernate"/>
 	<!-- Read in Service from the hibernate package -->
    <context:component-scan base-package="com.paldaps.bo.service"/>
    <!-- Transaction Config -->
    <bean id="transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager"
          p:sessionFactory-ref="sessionFactory"/>

    <tx:annotation-driven transaction-manager="transactionManager"/>
    
  
</beans>
